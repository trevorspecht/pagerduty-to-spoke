'use strict';

const got = require('got');
const sm = require('../lib/get-secrets');

const sendMessage = async (event) => {

  const teamBody = {
    json: {
      channel: event.detail.SlackChannel,
      username: 'askSpoke Team Settings',
      icon_emoji: ':spoke:',
      text: `<https://mapbox.askspoke.com/teams/${(event.detail.SpokeTeam).toLowerCase()}|${event.detail.SpokeTeam} team askSpoke settings> were not changed automatically with on-call handoff.\nYou can change ticket assignment settings manually using the link above.`,
      attachments: [
        {
          fallback: 'askSpoke team settings were not changed automatically.',
          color: '#ff4500',
          footer: 'A friendly notice from Mapbox IT'
        }
      ]
    },
    responseType: 'json'
  };

  const itBody = {
    json: {
      channel: '#trevor-testing',
      username: 'askSpoke Team Settings',
      icon_emoji: ':spoke:',
      text: `<https://mapbox.askspoke.com/teams/${(event.detail.SpokeTeam).toLowerCase()}|${event.detail.SpokeTeam} team askSpoke settings> were not changed automatically with on-call handoff.\nThe ${event.detail.SpokeTeam} team has been notified in the ${event.detail.SlackChannel} channel.`,
      attachments: [
        {
          fallback: `${event.detail.SpokeTeam} askSpoke team settings were not changed automatically.`,
          color: '#ff4500',
          footer: 'Generated by mapbox/oncall-askspoke-team-settings'
        }
      ]
    },
    responseType: 'json'
  };

  const teamUrl = await sm.getSecret('general/it-oncall-askspoke-team-settings/alerts_it_url');
  console.log('teamUrl: ' + teamUrl);
  let itResponse, teamResponse;

  try {
    itResponse = await got.post(teamUrl, itBody);
    console.log('itResponse: ' + itResponse.body);
  } catch (error) {
    console.log(error);
  }

  try {
    teamResponse = await got.post(teamUrl, teamBody);
    console.log('teamResponse: ' + teamResponse.body);
  } catch (error) {
    console.log(error);
  }

  return (itResponse, teamResponse);
};

const event = {
  'version': '0',
  'id': 'd53739ba-xxx-b544-e75d-xxxxxx',
  'detail-type': 'On-call Handoff Event',
  'source': 'on-call/handoff',
  'account': 'xxxxx',
  'time': '2020-06-05T20:55:07Z',
  'region': 'us-east-1',
  'resources': [],
  'detail': {
    'ScheduleName': 'highestEscalation',
    'SlackChannel': '#it-bots-testing',
    'SpokeTeam': 'IT',
    'OnCallEmail': 'xxxxxx.xxxx@mapbox.com',
    'PreviouslyOnCall': 'previouslyOnCall'
  }
};

sendMessage(event);
